grammar net.mindengine.galen.SpecLang // with org.eclipse.xtext.common.Terminals
import 'http://www.eclipse.org/emf/2002/Ecore' as ecore
import 'http://www.eclipse.org/xtext/xbase/Xbase' as xbase
generate specLang "http://www.mindengine.net/galen/SpecLang"

Model:
//(definitionImports+=SpecFileRef)*
	DEF_SEPERATOR NL
	(definitions+=Definition)+ 
	DEF_SEPERATOR NL
	(expectationImports+=SpecFileRef)* 
	(expectations+=Expectation)+;

Definition:
	NL? placeholder=PLACEHOLDER WS selectorType=SelectorType WS selectorValue=SelectorValue NL;


SpecFileRef:
	PROCESSOR_STATEMENT filename=ID '.spec';

SelectorValue:
	XPATH_SELECTOR | CSS_SELECTOR | ID_SELECTOR;

Expectation:
	(label=EXPECTATION_LABEL | '^') '|' WS? ('*' | tags+=ID (WS (',' WS? tags+=ID)*))? NL
	SPEC_SEPERATOR NL
	placeholderRef=PLACEHOLDER NL
	(specs+=TestSpec);

TestSpec:
	WS TestSpecType NL;

SelectorType:
	('css' | 'xpath' | 'id');
	
TestSpecType:
	('near:'| 'below:' | 'above:' |  ('width:' | 'height:') SIZE | 'aligned:' | 'text:' | 'center:' | 'visible:' | 'absent:' | 
	'inside' WS ('partly')?':' WS PLACEHOLDER WS Position (',' WS Position)* |
	'contains' WS ('partly')?':'WS PLACEHOLDER (','WS PLACEHOLDER)* |
	'on'(WS ('top left'|'bottom left'|'top right'|'bottom right'))?':' | 
	'component:' | 
	'color scheme:');

Position:
	(INT WS 'to' WS)? INT+ (WS? 'px' WS Placement) 
;
Placement:
	( 'top' | 'bottom' | 'left' | 'right' ) ( 'top' | 'bottom' | 'left' | 'right' )?
;

terminal PROCESSOR_STATEMENT:
	'@@'
;
	
terminal DEF_SEPERATOR:
	'='+
;	

terminal SPEC_SEPERATOR:
	'-'+
;
	
terminal SIZE:
	WS ( ('<'|'>')? (INT WS 'to' WS)? INT+ (WS? 'px' |  '%' WS  ('of' WS PLACEHOLDER('/height'|'/width'))?))
;

terminal XPATH_SELECTOR:
	'//' ID;

terminal CSS_SELECTOR:
	('.') ID | (':') ID | ('*') ID | ('a'..'z' | 'A'..'Z')+;

terminal ID_SELECTOR:
	'#' ID;

terminal EXPECTATION_LABEL:
	'@' WS ('a'..'z' | 'A'..'Z' | '-' | '_' | WS )+;

terminal PLACEHOLDER:
	('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '-'| '*')*;

terminal HEX_NUMBER:
	'#' ('a'..'z' | 'A'..'Z' | '0'..'9')*;

terminal INT returns ecore::EInt:
	('-')? ('0'..'9')+;

terminal REAL returns ecore::EDouble:
	('-')? ('0'..'9')+ '.' ('0'..'9')+;

terminal ID:
	('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')*;

terminal WS:
	(' ' | '\t')+;
	

terminal SL_COMMENT 	: '# ' !('\n'|'\r')* ('\r'? '\n')?;

// New line on DOS or Unix
terminal NL: 
	('\r'? '\n')+;

